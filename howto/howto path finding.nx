
'LIST OF PLACEMENT THAT BUILD THE FRONTIERE
'IT WORK LIKE A FIFO LIST
'(SIZE,X/Y) = THE VALUE FOR EACH PLACEMENT COORDS
'SIZE = MAX SHOULD BE WIDTH*HEIGHT-1
'(,0) = X
'(,1) = Y
DIM GLOBAL FRONTIERE(18*7-1,1)
'POINTER TO THE PUSH AND POP INDEXES
GLOBAL FRONTFIRST,FRONTLAST

'PLACEMENT CAM FROM LIST
'(X,Y,F) = THE COORD VALUE IN F AXIS
'(,,0) = X AXIS
'(,,1) = Y AXIS
DIM GLOBAL CAMEFROM(17,6,1)

'TARGET PLACEMENT
GLOBAL TARGETX,TARGETY

'PATH FOUND, WE CAN STOP SEARCHING
GLOBAL PATHFOUND

'THREE DIMENSIONAL ARRAY RESET
'A() = THE TARGET ARRAY
'F = FIRST MAX INDEX
'S = SECOND MAX INDEX
'T = THRID MAX INDEX
'V = THE RESET VALUE
SUB HDAR(A(),F,S,T,V)
FOR I=0 TO F
FOR J=0 TO S
FOR K=0 TO T
A(I,J,K)=V
NEXT K
NEXT J
NEXT I
END SUB

'PUSH A PLACEMENT COORDS AT THE TOP OF THE FRONTIERE LIST
SUB FRONTIEREPUSH(X,Y)
FRONTIERE(FRONTFIRST,0)=X
FRONTIERE(FRONTFIRST,1)=Y
INC FRONTFIRST
END SUB

'CHECK IF THE FRONTIERE IS EMPTY
SUB FRONTIEREEMPTY(E)
E=(FRONTLAST>=FRONTFIRST)
END SUB

'POP A PLACEMENT COORDS FROM THE BOTTOM OF THE FRONTIERE LIST
SUB FRONTIEREPOP(X,Y)
X=FRONTIERE(FRONTLAST,0)
Y=FRONTIERE(FRONTLAST,1)
INC FRONTLAST
END SUB

'CHECK IF A PLACEMENT IS AN OBSACLE
'X,Y = PLACEMENT COORDS
'O = IS PLACEMENT OBSTRUCTED?
SUB GRAPHOBSTACLE(X,Y,O)
O=1
IF X<0 OR X>17 OR Y<0 OR Y>6 THEN EXIT SUB
BG 1
IF CELL.C(X+1,Y+8)=2 THEN EXIT SUB
O=0
END SUB

'RESET THE ALGO, SET THE START POINT
'X,Y = THE STARTING PLACEMENT COORDS
'M,N = THE TARGET PLACEMENT COORDS
SUB BREADTHRESET(X,Y,M,N)
CALL HDAR(CAMEFROM(),17,6,0,-1)
'DON'T NEED TO RESET THE FRONTIERE ARRAY
'UPDATING IT'S POINTER IS ENOUGH
FRONTFIRST=0
FRONTLAST=0
CALL FRONTIEREPUSH(X,Y)
CALL CAMESET(X,Y,X,Y)
TARGETX=M
TARGETY=N
PATHFOUND=0
END SUB

'STORE THE COORDS WHERE THE PATH COME FROM
'X,Y = CURRENT PLACEMENT
'M,N = PREVIOUS PLACEMENT
SUB CAMESET(X,Y,M,N)
CAMEFROM(X,Y,0)=M
CAMEFROM(X,Y,1)=N
END SUB

'CHECK FOR A NEIGHBOR, IT WILL EXPAND THE FRONTIERE
'M,N = CAMEFROM PLACEMENT COORDS
'X,Y = TEST PLACEMENT COORDS
'O = IS OBSTRUCTED?
SUB NEIGHTBORTEST(M,N,X,Y)
IF PATHFOUND THEN EXIT SUB
O=0
CALL GRAPHOBSTACLE(X,Y,O)
IF O=1 THEN EXIT SUB
IF CAMEFROM(X,Y,0)>=0 THEN EXIT SUB
CALL FRONTIEREPUSH(X,Y)
CALL CAMESET(X,Y,M,N)
IF X=TARGETX AND Y=TARGETY THEN
'PATH FOUND
PATHFOUND=-1
FRONTFIRST=0
FRONTLAST=0
END IF
END SUB

'CONTINUE TO EXPLORE
'C = NUMBER OF ITERATION
'E = IS FRONTIERE EMPTY?
'X,Y = CURRENT ANALYSED PLACEMENT
SUB BREADTHEXPLORE(C)
E=0
X=0
Y=0
CALL FRONTIEREEMPTY(E)
WHILE NOT E AND C>0 AND NOT PATHFOUND
CALL FRONTIEREPOP(X,Y)
CALL NEIGHTBORTEST(X,Y,X-1,Y)
CALL NEIGHTBORTEST(X,Y,X,Y-1)
CALL NEIGHTBORTEST(X,Y,X+1,Y)
CALL NEIGHTBORTEST(X,Y,X,Y+1)
DEC C
CALL FRONTIEREEMPTY(E)
WEND
END SUB

BG 1
BG COPY 0,0,20,16 TO 0,0

TEXT 1,1,"DEMO OF A PATH"
TEXT 1,2,"FINDING ALGO USING"
TEXT 1,3,"BREADTH FIRST"
TEXT 1,4,"SEARCH."

TOUCHSCREEN

STARTX=1
STARTY=5

ENDX=15
ENDY=1

PEN=0
RESTART:
WAIT VBL
CALL BREADTHRESET(STARTX,STARTY,ENDX,ENDY)
SPRITE.A 0,2
SPRITE 0,(1+STARTX)*8,(8+STARTY)*8,5
SPRITE.A 1,2
SPRITE 1,(1+ENDX)*8,(8+ENDY)*8,6

DO
CALL BREADTHEXPLORE(100)

BG 0
BG FILL 0,0 TO 19,15 CHAR 0
ATTR 1

IF PATHFOUND THEN
X=ENDX
Y=ENDY
CELL X+1,Y+8,3
REPEAT
NX=CAMEFROM(X,Y,0)
NY=CAMEFROM(X,Y,1)
X=NX
Y=NY
CELL X+1,Y+8,3
UNTIL X=STARTX AND Y=STARTY
END IF

CX=TOUCH.X\8
CY=TOUCH.Y\8
IF TOUCH AND CX>=1 AND CX<=18 AND CY>=8 AND CY<=14 THEN

IF CX-1=STARTX AND CY-8=STARTY THEN
ELSE IF CX-1=ENDX AND CY-8=ENDY THEN
ELSE
BG 1
IF CELL.C(CX,CY)=2 AND PEN=0 THEN PEN=1
IF CELL.C(CX,CY)=1 AND PEN=0 THEN PEN=2
CELL CX,CY,PEN
GOTO RESTART
END IF
ELSE
PEN=0
END IF

WAIT 1
LOOP

#1:MAIN PALETTES
053F2F000039101B002A2000003F3C00
003F2A15003F2A15003F2A15003F2A15

#2:MAIN CHARACTERS
00000000000000000000000000000000
FEFEFEFEFEFEFE000000000000000000
0000000000000000FEFEFEFEFEFEFE00
FEFEFEFEFEFEFE00FEFEFEFEFEFEFE00
00000000000000000000000000000000
00000000101000000010387C38380000
000000000000000000386C446C380000

#3:MAIN BG
00001410000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000001010101010101010101
01010201010101010101010101010101
01010101010101010101000000000101
01010101010101010101020101010101
01010201020102010201010101010101
01010000000001010101010102010101
01010201010101010101010101010101
02010101010101010101000000000101
01010101020101010101020101010101
01010101010101010201010101010101
01010000000001010101010102010101
01010201010101010101010101010101
02010101010101010101000000000101
01010101020101010101010101010101
01010201020102010201010101010101
01010000000001010101010102010101
01010101010101010101010101010101
01010101010101010101000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000

